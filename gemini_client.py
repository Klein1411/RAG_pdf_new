import os
# T·∫Øt log chi ti·∫øt c·ªßa gRPC, v·ªën g√¢y ra th√¥ng b√°o "ALTS creds ignored"
os.environ['GRPC_VERBOSITY'] = 'ERROR'

import dotenv
import google.generativeai as genai
from PIL import Image

# T·∫£i c√°c bi·∫øn m√¥i tr∆∞·ªùng t·ª´ file .env
dotenv.load_dotenv()

# ƒê·ªçc t·∫•t c·∫£ c√°c API key c√≥ s·∫µn theo ƒë·ªãnh d·∫°ng GEMINI_API_KEY_1, GEMINI_API_KEY_2, ...
API_KEYS = [key for key in [os.getenv(f"GEMINI_API_KEY_{i}") for i in range(1, 4)] if key]

if not API_KEYS:
    print("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y key Gemini n√†o theo ƒë·ªãnh d·∫°ng GEMINI_API_KEY_1, ... trong file .env.")

# B·∫°n c√≥ th·ªÉ thay ƒë·ªïi t√™n model ·ªü ƒë√¢y n·∫øu c·∫ßn. Model 'gemini-2.5-flash' ch∆∞a t·ªìn t·∫°i, s·ª≠ d·ª•ng 'gemini-1.5-flash'.
MODEL_NAME = "gemini-2.5-flash"

def describe_slide(img: Image.Image) -> str:
    """
    S·ª≠ d·ª•ng Gemini ƒë·ªÉ m√¥ t·∫£ h√¨nh ·∫£nh c·ªßa m·ªôt slide, v·ªõi c∆° ch·∫ø t·ª± ƒë·ªông xoay v√≤ng API key khi g·∫∑p l·ªói.
    """
    if not API_KEYS:
        return "[Ch·ª©c nƒÉng m√¥ t·∫£ ·∫£nh b·ªã t·∫Øt do thi·∫øu API Keys]"

    # L·∫∑p qua t·ª´ng key ƒë·ªÉ th·ª≠
    for i, key in enumerate(API_KEYS):
        try:
            print(f"üîë Th·ª≠ v·ªõi API Key #{i + 1}...")
            genai.configure(api_key=key)
            model = genai.GenerativeModel(MODEL_NAME)
            
            prompt = '''B·∫°n l√† m·ªôt chuy√™n gia ph√¢n t√≠ch t√†i li·ªáu v√† slide thuy·∫øt tr√¨nh.
Nhi·ªám v·ª• c·ªßa b·∫°n l√† xem h√¨nh ·∫£nh c·ªßa m·ªôt slide v√† chuy·ªÉn ƒë·ªïi n√≥ th√†nh m·ªôt vƒÉn b·∫£n Markdown chi ti·∫øt, c√≥ c·∫•u tr√∫c.
- Gi·ªØ l·∫°i c√°c ti√™u ƒë·ªÅ, ƒë·ªÅ m·ª•c.
- Chuy·ªÉn ƒë·ªïi c√°c danh s√°ch (bullet points) th√†nh danh s√°ch Markdown.
- Tr√≠ch xu·∫•t v√† t√°i t·∫°o l·∫°i c√°c b·∫£ng bi·ªÉu m·ªôt c√°ch ch√≠nh x√°c nh·∫•t c√≥ th·ªÉ ·ªü ƒë·ªãnh d·∫°ng Markdown table.
- Di·ªÖn gi·∫£i v√† t√≥m t·∫Øt n·ªôi dung ch√≠nh c·ªßa slide m·ªôt c√°ch m·∫°ch l·∫°c.
- Lu√¥n tr·∫£ l·ªùi b·∫±ng ng√¥n ng·ªØ g·ªëc c·ªßa vƒÉn b·∫£n.'''
            
            response = model.generate_content([prompt, img])
            print(f"   -> ‚úÖ Key #{i + 1} th√†nh c√¥ng!")
            return response.text.strip()
        
        except Exception as e:
            print(f"   -> ‚ùå L·ªói v·ªõi Key #{i + 1}: {e}")
            # N·∫øu l√† key cu·ªëi c√πng m√† v·∫´n l·ªói, v√≤ng l·∫∑p s·∫Ω k·∫øt th√∫c
            continue
    
    # Tr·∫£ v·ªÅ th√¥ng b√°o l·ªói chung n·∫øu t·∫•t c·∫£ c√°c key ƒë·ªÅu th·∫•t b·∫°i
    return "[T·∫•t c·∫£ c√°c API key ƒë·ªÅu g·∫∑p l·ªói. Vui l√≤ng ki·ªÉm tra l·∫°i.]"
