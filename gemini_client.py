import os
import dotenv
import google.generativeai as genai

# T·∫£i c√°c bi·∫øn m√¥i tr∆∞·ªùng
dotenv.load_dotenv()

# L·∫•y danh s√°ch API keys t·ª´ .env
API_KEYS = [key for key in [os.getenv(f"GEMINI_API_KEY_{i}") for i in range(1, 4)] if key]

# Danh s√°ch c√°c model ƒë·ªÉ th·ª≠
GENERATIVE_MODELS = ["gemini-2.5-flash",
                     "gemini-2.0-flash",
                     "gemini-1.5-flash"]

def configure_gemini():
    """
    T·ª± ƒë·ªông t√¨m v√† c·∫•u h√¨nh API key v√† model generative t·ªët nh·∫•t ho·∫°t ƒë·ªông.
    Tr·∫£ v·ªÅ model ƒë√£ ƒë∆∞·ª£c kh·ªüi t·∫°o n·∫øu th√†nh c√¥ng, ng∆∞·ª£c l·∫°i tr·∫£ v·ªÅ None.
    """
    if not API_KEYS:
        print("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y API key n√†o trong file .env.")
        return None

    print("üîÑ ƒêang t√¨m API key v√† model ph√π h·ª£p...")
    for i, key in enumerate(API_KEYS):
        print(f"üîë Th·ª≠ v·ªõi API Key #{i + 1}...")
        genai.configure(api_key=key)
        
        # Th·ª≠ v·ªõi c√°c model generative
        for model_name in GENERATIVE_MODELS:
            try:
                model = genai.GenerativeModel(model_name)
                model.generate_content("test")
                print(f"   -> ‚úÖ Key #{i + 1} v√† model '{model_name}' ƒë√£ s·∫µn s√†ng.")
                # Tr·∫£ v·ªÅ model ƒë·∫ßu ti√™n ho·∫°t ƒë·ªông
                return model
            except Exception as e:
                # In l·ªói ra ƒë·ªÉ ng∆∞·ªùi d√πng bi·∫øt chi ti·∫øt
                # print(f"   -> ‚ùå L·ªói v·ªõi model '{model_name}': {e}")
                # Ch·ªâ th√¥ng b√°o model kh√¥ng ho·∫°t ƒë·ªông cho g·ªçn
                print(f"   -> ‚ùå Model '{model_name}' kh√¥ng ho·∫°t ƒë·ªông v·ªõi key n√†y.")
                continue # Th·ª≠ model ti·∫øp theo
    
    print("‚ùå Kh√¥ng t√¨m th·∫•y API key ho·∫∑c model n√†o ho·∫°t ƒë·ªông.")
    return None

if __name__ == "__main__":
    # Ch·∫°y c·∫•u h√¨nh v√† ki·ªÉm tra
    active_model = configure_gemini()
    
    if active_model:
        print(f"\n‚úÖ C·∫•u h√¨nh th√†nh c√¥ng! Model '{active_model.model_name}' ƒëang ƒë∆∞·ª£c s·ª≠ d·ª•ng.")
    else:
        print("\n‚ùå Kh√¥ng th·ªÉ c·∫•u h√¨nh Gemini. Vui l√≤ng ki·ªÉm tra l·∫°i API keys v√† quy·ªÅn truy c·∫≠p.")
