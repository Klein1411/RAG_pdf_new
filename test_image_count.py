"""
Script test ƒë·ªÉ ki·ªÉm tra logic ƒë·∫øm ·∫£nh v√† ch·ªçn ph∆∞∆°ng √°n OCR
"""
import sys
from pathlib import Path

# Add project root to path
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

from src.read_pdf import count_images_in_pdf
from src.config import PDF_DIR

def test_image_counting():
    """Test ƒë·∫øm ·∫£nh trong c√°c PDF"""
    
    print("=" * 70)
    print("TEST LOGIC ƒê·∫æM ·∫¢NH TRONG PDF")
    print("=" * 70)
    
    pdf_dir = Path(PDF_DIR)
    
    if not pdf_dir.exists():
        print(f"‚ùå Th∆∞ m·ª•c PDF kh√¥ng t·ªìn t·∫°i: {pdf_dir}")
        return
    
    pdf_files = list(pdf_dir.glob("*.pdf"))
    
    if not pdf_files:
        print(f"‚ùå Kh√¥ng c√≥ file PDF n√†o trong {pdf_dir}")
        return
    
    print(f"\nüìÅ T√¨m th·∫•y {len(pdf_files)} file PDF\n")
    
    results = []
    
    for pdf_file in pdf_files:
        print(f"üìÑ ƒêang ki·ªÉm tra: {pdf_file.name}")
        
        try:
            image_count = count_images_in_pdf(str(pdf_file))
            file_size_mb = pdf_file.stat().st_size / (1024 * 1024)
            
            # Quy·∫øt ƒë·ªãnh ph∆∞∆°ng √°n OCR
            if image_count < 20:
                ocr_method = "üß† GEMINI OCR (< 20 ·∫£nh)"
            else:
                ocr_method = "üîç TESSERACT OCR (>= 20 ·∫£nh)"
            
            results.append({
                'name': pdf_file.name,
                'images': image_count,
                'size_mb': file_size_mb,
                'method': ocr_method
            })
            
            print(f"   ‚úÖ {image_count} ·∫£nh | {file_size_mb:.2f} MB | {ocr_method}")
            
        except Exception as e:
            print(f"   ‚ùå L·ªói: {e}")
    
    # T·ªïng k·∫øt
    print("\n" + "=" * 70)
    print("T·ªîNG K·∫æT")
    print("=" * 70)
    
    if results:
        print(f"\n{'File':<40} {'·∫¢nh':>8} {'Size (MB)':>12} {'Ph∆∞∆°ng √°n':<25}")
        print("-" * 90)
        
        for r in results:
            print(f"{r['name']:<40} {r['images']:>8} {r['size_mb']:>12.2f} {r['method']:<25}")
        
        # Th·ªëng k√™
        gemini_count = sum(1 for r in results if 'üß†' in r['method'])
        tesseract_count = sum(1 for r in results if 'üîç' in r['method'])
        
        print("\n" + "-" * 90)
        print(f"üìä Th·ªëng k√™:")
        print(f"   ‚Ä¢ {gemini_count} file s·∫Ω d√πng Gemini OCR (< 20 ·∫£nh)")
        print(f"   ‚Ä¢ {tesseract_count} file s·∫Ω d√πng Tesseract OCR (>= 20 ·∫£nh)")
    
    print("\n‚úÖ KI·ªÇM TRA HO√ÄN T·∫§T!")
    print("=" * 70)

if __name__ == "__main__":
    test_image_counting()
